/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as userProfileRouteImport } from './routes/(user)/profile'
import { Route as authAuthRouteRouteImport } from './routes/(auth)/_auth/route'
import { Route as authAuthRegisterRouteImport } from './routes/(auth)/_auth/register'
import { Route as authAuthLoginRouteImport } from './routes/(auth)/_auth/login'

const authRouteImport = createFileRoute('/(auth)')()

const authRoute = authRouteImport.update({
  id: '/(auth)',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const userProfileRoute = userProfileRouteImport.update({
  id: '/(user)/profile',
  path: '/profile',
  getParentRoute: () => rootRouteImport,
} as any)
const authAuthRouteRoute = authAuthRouteRouteImport.update({
  id: '/_auth',
  getParentRoute: () => authRoute,
} as any)
const authAuthRegisterRoute = authAuthRegisterRouteImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => authAuthRouteRoute,
} as any)
const authAuthLoginRoute = authAuthLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => authAuthRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof authAuthRouteRouteWithChildren
  '/profile': typeof userProfileRoute
  '/login': typeof authAuthLoginRoute
  '/register': typeof authAuthRegisterRoute
}
export interface FileRoutesByTo {
  '/': typeof authAuthRouteRouteWithChildren
  '/profile': typeof userProfileRoute
  '/login': typeof authAuthLoginRoute
  '/register': typeof authAuthRegisterRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/(auth)': typeof authRouteWithChildren
  '/(auth)/_auth': typeof authAuthRouteRouteWithChildren
  '/(user)/profile': typeof userProfileRoute
  '/(auth)/_auth/login': typeof authAuthLoginRoute
  '/(auth)/_auth/register': typeof authAuthRegisterRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/profile' | '/login' | '/register'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/profile' | '/login' | '/register'
  id:
    | '__root__'
    | '/'
    | '/(auth)'
    | '/(auth)/_auth'
    | '/(user)/profile'
    | '/(auth)/_auth/login'
    | '/(auth)/_auth/register'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  authRoute: typeof authRouteWithChildren
  userProfileRoute: typeof userProfileRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(auth)': {
      id: '/(auth)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(user)/profile': {
      id: '/(user)/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof userProfileRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/_auth': {
      id: '/(auth)/_auth'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authAuthRouteRouteImport
      parentRoute: typeof authRoute
    }
    '/(auth)/_auth/register': {
      id: '/(auth)/_auth/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof authAuthRegisterRouteImport
      parentRoute: typeof authAuthRouteRoute
    }
    '/(auth)/_auth/login': {
      id: '/(auth)/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authAuthLoginRouteImport
      parentRoute: typeof authAuthRouteRoute
    }
  }
}

interface authAuthRouteRouteChildren {
  authAuthLoginRoute: typeof authAuthLoginRoute
  authAuthRegisterRoute: typeof authAuthRegisterRoute
}

const authAuthRouteRouteChildren: authAuthRouteRouteChildren = {
  authAuthLoginRoute: authAuthLoginRoute,
  authAuthRegisterRoute: authAuthRegisterRoute,
}

const authAuthRouteRouteWithChildren = authAuthRouteRoute._addFileChildren(
  authAuthRouteRouteChildren,
)

interface authRouteChildren {
  authAuthRouteRoute: typeof authAuthRouteRouteWithChildren
}

const authRouteChildren: authRouteChildren = {
  authAuthRouteRoute: authAuthRouteRouteWithChildren,
}

const authRouteWithChildren = authRoute._addFileChildren(authRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  authRoute: authRouteWithChildren,
  userProfileRoute: userProfileRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
