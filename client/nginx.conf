server {
    listen 80;
    server_name localhost;
    
    root /usr/share/nginx/html;
    index index.html;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; connect-src 'self' ws: wss:;" always;
    
    # Enable gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # Cache static assets aggressively
    location ~* \.(js|css|png|jpg|jpeg|gif|svg|ico|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
    }
    
    # Cache HTML with shorter expiry
    location ~* \.html$ {
        expires 1h;
        add_header Cache-Control "public";
    }
    
    # Streaming endpoints - disable gzip and buffering
    location ~ ^/${BASE_API_SLUG}/ai/.*-stream$ {
        gzip off;
        proxy_pass http://server:${PORT};
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass_header Set-Cookie;
        proxy_pass_header Cookie;
        proxy_set_header Cookie $http_cookie;
        proxy_cache_bypass $http_upgrade;
        proxy_buffering off;
        proxy_set_header Connection '';
        proxy_cache off;
        proxy_read_timeout 86400;
    }
    
    # API proxy with better error handling
    location /${BASE_API_SLUG}/ {
        proxy_pass http://server:${PORT}/${BASE_API_SLUG}/;
        proxy_http_version 1.1;
        
        # Headers for proper forwarding
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Cookie handling - crucial for authentication
        proxy_pass_header Set-Cookie;
        proxy_pass_header Cookie;
        proxy_set_header Cookie $http_cookie;
        
        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # Disable caching for API calls
        proxy_cache_bypass $http_upgrade;
        proxy_no_cache 1;
        proxy_cache_bypass 1;
        
        # Better error handling
        proxy_intercept_errors on;
        error_page 502 503 504 /api_error.html;
    }
    
    # Handle SPA routing (must come after API routes)
    location / {
        try_files $uri $uri/ /index.html;
    }
    
    # Health check endpoint for frontend
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
    
    # Custom error page for API errors
    location = /api_error.html {
        root /usr/share/nginx/html;
        internal;
    }
    
    # Deny access to hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Block common exploit attempts
    location ~* \.(aspx|php|jsp|cgi)$ {
        return 410;
    }
}