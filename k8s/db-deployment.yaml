apiVersion: apps/v1
kind: Deployment
metadata:
  name: db
  labels:
    app.kubernetes.io/name: chat-app
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: chat-app
    app.kubernetes.io/version: "1.0.0"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: chat-app
      app.kubernetes.io/component: database
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: chat-app
        app.kubernetes.io/component: database
        app.kubernetes.io/part-of: chat-app
        app.kubernetes.io/version: "1.0.0"
    spec:
      containers:
        - args:
            - postgres
            - -c
            - shared_buffers=256MB
            - -c
            - effective_cache_size=512MB
            - -c
            - maintenance_work_mem=128MB
            - -c
            - checkpoint_completion_target=0.7
            - -c
            - wal_buffers=16MB
            - -c
            - default_statistics_target=100
            - -c
            - random_page_cost=1.1
            - -c
            - effective_io_concurrency=200
            - -c
            - work_mem=8MB
            - -c
            - max_connections=100
          env:
            - name: POSTGRES_DB
              value: chatapp
            - name: POSTGRES_INITDB_ARGS
              value: --data-checksums --wal-segsize=64
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_USER
              value: username
          envFrom:
            - configMapRef:
                name: env
          image: postgres:17.5-alpine
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - pg_isready -U "$POSTGRES_USER" -d "$POSTGRES_DB"
            failureThreshold: 5
            initialDelaySeconds: 15
            periodSeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command:
                - sh
                - -c
                - pg_isready -U "$POSTGRES_USER" -d "$POSTGRES_DB"
            initialDelaySeconds: 5
            periodSeconds: 10
          name: chat-app-db
          ports:
            - containerPort: 5432
              protocol: TCP
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgres-data
      restartPolicy: Always
      volumes:
        - name: postgres-data
          emptyDir: {}
